`timescale 1ns / 1ps

////////////////////////
// This file was automatically generated by CATE
////////////////////////

module Adder_4bit(
	input [3:0] A,
	input [3:0] B,
	input  Cin,
	input mode, //switch for mode 
	output [3:0] S,
	output  Cout,
	output overflow
	);

	// local signals
	logic  C1;
	logic  C2;
	logic  C3;
	//logic MO; //output for switch module
	logic s0;
	logic s1;
	logic s2;
	logic s3;
	logic q;

	// instantiate lower-level modules
	Full_Adder FA0(
	.A(A[0]),
	.B(B[0]),
	.Cin(Cin),
	.S(s0),
	.Cout(C1)
	);

	Full_Adder FA1(
	.A(A[1]),
	.B(B[1]),
	.Cin(C1),
	.S(s1),
	.Cout(C2)
	);

	Full_Adder FA2(
	.A(A[2]),
	.B(B[2]),
	.Cin(C2),
	.S(s2),
	.Cout(C3)
	);

	Full_Adder FA3(
	.A(A[3]),
	.B(B[3]),
	.Cin(C3),
	.S(s3),
	.Cout(Cout)
	);
	
	and(overflow, Cout, 1); //overflow is true if Cout is high
	and(q, Cout, mode); //saturates if Cout and mode are high, (saturation mode)
	or(S[0], q, s0); 
	or(S[1], q, s1);
	or(S[2], q, s2);
	or(S[3], q, s3);

endmodule

